@App:name("Geo-velocityBasedLogin")
@App:description("Description of the plan")

@Source(type = 'http-request', source.id='testsource', receiver.url="https://localhost:8280/Geo-velocityBasedLogin/InputStream",@map(type='json', @attributes(messageId='trp:messageId', username='$.event.username', loginTime='$.event.loginTime',latitude='$.event.latitude' , longitude = '$.event.longitude')))
define stream InputStream (messageId string, username string, loginTime string,latitude double, longitude double);

@sink(type='http-response', source.id='testsource', message.id='{{messageId}}', @map(type='json'))
define stream OutputStream (messageId string, username string, velocity double);

@primaryKey('username')
@index('loginTime')
@store(type='rdbms', jdbc.url="jdbc:mysql://localhost:3306/LoginDetailsDB", username="root", password="root" , jdbc.driver.name="com.mysql.jdbc.Driver")
define table LoginDetails(username string, loginTime string,latitude double, longitude double);

define stream LoginDetailsStream (messageId string, username string, distance double, timeGap int);

define function timeGapFn[javascript] return int{
    var timeGap = Math.floor(parseInt(data[0])-parseInt(data[1]));
    return timeGap
    };

from InputStream#window.length(1) join LoginDetails
on InputStream.username==LoginDetails.username
select InputStream.messageId as messageId, InputStream.username as username, ifThenElse(LoginDetails.latitude is null,100.0,geo:distance(InputStream.latitude,InputStream.longitude,LoginDetails.latitude,LoginDetails.longitude)) as distance,ifThenElse(LoginDetails.loginTime is null, 25,timeGapFn(InputStream.loginTime,LoginDetails.loginTime)) as timeGap
insert into LoginDetailsStream;

from InputStream#window.length(1)[LoginDetails.username!=username in LoginDetails]
select InputStream.messageId as messageId, InputStream.username as username, 0.0 as distance,1 as timeGap
insert into LoginDetailsStream;

from LoginDetailsStream
select messageId, username,(distance/timeGap) as velocity
insert into OutputStream;

from InputStream#window.length(1)
select username, loginTime, latitude, longitude
update or insert into LoginDetails
set LoginDetails.username = username, LoginDetails.loginTime = loginTime, LoginDetails.latitude = latitude, LoginDetails.longitude = longitude
    on LoginDetails.username == username;



